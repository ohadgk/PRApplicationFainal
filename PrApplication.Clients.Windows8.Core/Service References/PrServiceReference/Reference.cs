//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PrApplication.Clients.Windows8.Core.PrServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Guest", Namespace="http://schemas.datacontract.org/2004/07/WCF_Azure_Service", IsReference=true)]
    public partial class Guest : object, System.ComponentModel.INotifyPropertyChanged {

        public override string ToString()
        {
            return FirstName + " " + LastName;
        }
        
        private System.Nullable<bool> AllCompanionsArrivedField;
        
        private bool AtendedField;
        
        private System.Nullable<int> AtendedCompanionsField;
        
        private int CompanionsField;
        
        private PrApplication.Clients.Windows8.Core.PrServiceReference.Event EventField;
        
        private int EventIdField;
        
        private string FirstNameField;
        
        private int IdField;
        
        private byte[] ImageField;
        
        private string LastNameField;
        
        private string QRCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AllCompanionsArrived {
            get {
                return this.AllCompanionsArrivedField;
            }
            set {
                if ((this.AllCompanionsArrivedField.Equals(value) != true)) {
                    this.AllCompanionsArrivedField = value;
                    this.RaisePropertyChanged("AllCompanionsArrived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Atended {
            get {
                return this.AtendedField;
            }
            set {
                if ((this.AtendedField.Equals(value) != true)) {
                    this.AtendedField = value;
                    this.RaisePropertyChanged("Atended");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AtendedCompanions {
            get {
                return this.AtendedCompanionsField;
            }
            set {
                if ((this.AtendedCompanionsField.Equals(value) != true)) {
                    this.AtendedCompanionsField = value;
                    this.RaisePropertyChanged("AtendedCompanions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Companions {
            get {
                return this.CompanionsField;
            }
            set {
                if ((this.CompanionsField.Equals(value) != true)) {
                    this.CompanionsField = value;
                    this.RaisePropertyChanged("Companions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrApplication.Clients.Windows8.Core.PrServiceReference.Event Event {
            get {
                return this.EventField;
            }
            set {
                if ((object.ReferenceEquals(this.EventField, value) != true)) {
                    this.EventField = value;
                    this.RaisePropertyChanged("Event");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventId {
            get {
                return this.EventIdField;
            }
            set {
                if ((this.EventIdField.Equals(value) != true)) {
                    this.EventIdField = value;
                    this.RaisePropertyChanged("EventId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QRCode {
            get {
                return this.QRCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.QRCodeField, value) != true)) {
                    this.QRCodeField = value;
                    this.RaisePropertyChanged("QRCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schemas.datacontract.org/2004/07/WCF_Azure_Service", IsReference=true)]
    public partial class Event : object, System.ComponentModel.INotifyPropertyChanged {

        public override string ToString()
        {
            return Name;
        }
        
        private System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Guest> GuestsField;
        
        private int IdField;
        
        private string NameField;
        
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Guest> Guests {
            get {
                return this.GuestsField;
            }
            set {
                if ((object.ReferenceEquals(this.GuestsField, value) != true)) {
                    this.GuestsField = value;
                    this.RaisePropertyChanged("Guests");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/WCF_Azure_Service")]
    public partial class User : object, System.ComponentModel.INotifyPropertyChanged {

        public override string ToString()
        {
            return string.Format("{0} , Is Admin: {1}", UserName, IsAdmin);
        }
        
        private int IdField;
        
        private bool IsAdminField;
        
        private string PasswordField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdmin {
            get {
                return this.IsAdminField;
            }
            set {
                if ((this.IsAdminField.Equals(value) != true)) {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PrServiceReference.IPrService")]
    public interface IPrService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPrService/GetGuestsByEventIdAndGuestName", ReplyAction="http://tempuri.org/IPrService/GetGuestsByEventIdAndGuestNameResponse")]
        System.IAsyncResult BeginGetGuestsByEventIdAndGuestName(int eventId, string guestFullName, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Guest> EndGetGuestsByEventIdAndGuestName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPrService/EncryptPass", ReplyAction="http://tempuri.org/IPrService/EncryptPassResponse")]
        System.IAsyncResult BeginEncryptPass(string password, System.AsyncCallback callback, object asyncState);
        
        string EndEncryptPass(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPrService/GetSpecificGuest", ReplyAction="http://tempuri.org/IPrService/GetSpecificGuestResponse")]
        System.IAsyncResult BeginGetSpecificGuest(int eventId, int guestId, System.AsyncCallback callback, object asyncState);
        
        PrApplication.Clients.Windows8.Core.PrServiceReference.Guest EndGetSpecificGuest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPrService/ChangeGuestStatus", ReplyAction="http://tempuri.org/IPrService/ChangeGuestStatusResponse")]
        System.IAsyncResult BeginChangeGuestStatus(int eventId, int guestId, bool attended, bool allCompanionsArrived, int companionsThatArrived, System.AsyncCallback callback, object asyncState);
        
        bool EndChangeGuestStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPrService/GetEventByID", ReplyAction="http://tempuri.org/IPrService/GetEventByIDResponse")]
        System.IAsyncResult BeginGetEventByID(int eventId, System.AsyncCallback callback, object asyncState);
        
        PrApplication.Clients.Windows8.Core.PrServiceReference.Event EndGetEventByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPrService/GetEvent", ReplyAction="http://tempuri.org/IPrService/GetEventResponse")]
        System.IAsyncResult BeginGetEvent(string eventName, System.DateTime eventDate, System.AsyncCallback callback, object asyncState);
        
        PrApplication.Clients.Windows8.Core.PrServiceReference.Event EndGetEvent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPrService/RemoveEvent", ReplyAction="http://tempuri.org/IPrService/RemoveEventResponse")]
        System.IAsyncResult BeginRemoveEvent(int eventId, System.AsyncCallback callback, object asyncState);
        
        bool EndRemoveEvent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPrService/GetEvents", ReplyAction="http://tempuri.org/IPrService/GetEventsResponse")]
        System.IAsyncResult BeginGetEvents(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Event> EndGetEvents(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPrService/GetEventsByEventName", ReplyAction="http://tempuri.org/IPrService/GetEventsByEventNameResponse")]
        System.IAsyncResult BeginGetEventsByEventName(string eventName, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Event> EndGetEventsByEventName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPrService/GetEventsByEventDate", ReplyAction="http://tempuri.org/IPrService/GetEventsByEventDateResponse")]
        System.IAsyncResult BeginGetEventsByEventDate(System.DateTime eventDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Event> EndGetEventsByEventDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPrService/CreateEvent", ReplyAction="http://tempuri.org/IPrService/CreateEventResponse")]
        System.IAsyncResult BeginCreateEvent(string eventName, System.DateTime eventDate, System.AsyncCallback callback, object asyncState);
        
        bool EndCreateEvent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPrService/AddGuest", ReplyAction="http://tempuri.org/IPrService/AddGuestResponse")]
        System.IAsyncResult BeginAddGuest(int eventId, PrApplication.Clients.Windows8.Core.PrServiceReference.Guest guest, System.AsyncCallback callback, object asyncState);
        
        bool EndAddGuest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPrService/RemoveGuest", ReplyAction="http://tempuri.org/IPrService/RemoveGuestResponse")]
        System.IAsyncResult BeginRemoveGuest(int eventId, int guestId, System.AsyncCallback callback, object asyncState);
        
        bool EndRemoveGuest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPrService/GetUsers", ReplyAction="http://tempuri.org/IPrService/GetUsersResponse")]
        System.IAsyncResult BeginGetUsers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.User> EndGetUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPrService/GetUserById", ReplyAction="http://tempuri.org/IPrService/GetUserByIdResponse")]
        System.IAsyncResult BeginGetUserById(int userId, System.AsyncCallback callback, object asyncState);
        
        PrApplication.Clients.Windows8.Core.PrServiceReference.User EndGetUserById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPrService/AddUser", ReplyAction="http://tempuri.org/IPrService/AddUserResponse")]
        System.IAsyncResult BeginAddUser(string userName, string password, bool isAdmin, System.AsyncCallback callback, object asyncState);
        
        bool EndAddUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPrService/RemoveUserByUserName", ReplyAction="http://tempuri.org/IPrService/RemoveUserByUserNameResponse")]
        System.IAsyncResult BeginRemoveUserByUserName(string userName, System.AsyncCallback callback, object asyncState);
        
        bool EndRemoveUserByUserName(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPrServiceChannel : PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGuestsByEventIdAndGuestNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGuestsByEventIdAndGuestNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Guest> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Guest>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EncryptPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EncryptPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSpecificGuestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSpecificGuestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PrApplication.Clients.Windows8.Core.PrServiceReference.Guest Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PrApplication.Clients.Windows8.Core.PrServiceReference.Guest)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChangeGuestStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ChangeGuestStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEventByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEventByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PrApplication.Clients.Windows8.Core.PrServiceReference.Event Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PrApplication.Clients.Windows8.Core.PrServiceReference.Event)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PrApplication.Clients.Windows8.Core.PrServiceReference.Event Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PrApplication.Clients.Windows8.Core.PrServiceReference.Event)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Event> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Event>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEventsByEventNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEventsByEventNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Event> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Event>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEventsByEventDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEventsByEventDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Event> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Event>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddGuestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddGuestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveGuestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveGuestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PrApplication.Clients.Windows8.Core.PrServiceReference.User Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PrApplication.Clients.Windows8.Core.PrServiceReference.User)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveUserByUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveUserByUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PrServiceClient : System.ServiceModel.ClientBase<PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService>, PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService {
        
        private BeginOperationDelegate onBeginGetGuestsByEventIdAndGuestNameDelegate;
        
        private EndOperationDelegate onEndGetGuestsByEventIdAndGuestNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetGuestsByEventIdAndGuestNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginEncryptPassDelegate;
        
        private EndOperationDelegate onEndEncryptPassDelegate;
        
        private System.Threading.SendOrPostCallback onEncryptPassCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSpecificGuestDelegate;
        
        private EndOperationDelegate onEndGetSpecificGuestDelegate;
        
        private System.Threading.SendOrPostCallback onGetSpecificGuestCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangeGuestStatusDelegate;
        
        private EndOperationDelegate onEndChangeGuestStatusDelegate;
        
        private System.Threading.SendOrPostCallback onChangeGuestStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEventByIDDelegate;
        
        private EndOperationDelegate onEndGetEventByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetEventByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEventDelegate;
        
        private EndOperationDelegate onEndGetEventDelegate;
        
        private System.Threading.SendOrPostCallback onGetEventCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveEventDelegate;
        
        private EndOperationDelegate onEndRemoveEventDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveEventCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEventsDelegate;
        
        private EndOperationDelegate onEndGetEventsDelegate;
        
        private System.Threading.SendOrPostCallback onGetEventsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEventsByEventNameDelegate;
        
        private EndOperationDelegate onEndGetEventsByEventNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetEventsByEventNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEventsByEventDateDelegate;
        
        private EndOperationDelegate onEndGetEventsByEventDateDelegate;
        
        private System.Threading.SendOrPostCallback onGetEventsByEventDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateEventDelegate;
        
        private EndOperationDelegate onEndCreateEventDelegate;
        
        private System.Threading.SendOrPostCallback onCreateEventCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddGuestDelegate;
        
        private EndOperationDelegate onEndAddGuestDelegate;
        
        private System.Threading.SendOrPostCallback onAddGuestCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveGuestDelegate;
        
        private EndOperationDelegate onEndRemoveGuestDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveGuestCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUsersDelegate;
        
        private EndOperationDelegate onEndGetUsersDelegate;
        
        private System.Threading.SendOrPostCallback onGetUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserByIdDelegate;
        
        private EndOperationDelegate onEndGetUserByIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUserDelegate;
        
        private EndOperationDelegate onEndAddUserDelegate;
        
        private System.Threading.SendOrPostCallback onAddUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveUserByUserNameDelegate;
        
        private EndOperationDelegate onEndRemoveUserByUserNameDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveUserByUserNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public PrServiceClient() : 
                base(PrServiceClient.GetDefaultBinding(), PrServiceClient.GetDefaultEndpointAddress()) {
        }
        
        public PrServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(PrServiceClient.GetBindingForEndpoint(endpointConfiguration), PrServiceClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public PrServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(PrServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public PrServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(PrServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public PrServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetGuestsByEventIdAndGuestNameCompletedEventArgs> GetGuestsByEventIdAndGuestNameCompleted;
        
        public event System.EventHandler<EncryptPassCompletedEventArgs> EncryptPassCompleted;
        
        public event System.EventHandler<GetSpecificGuestCompletedEventArgs> GetSpecificGuestCompleted;
        
        public event System.EventHandler<ChangeGuestStatusCompletedEventArgs> ChangeGuestStatusCompleted;
        
        public event System.EventHandler<GetEventByIDCompletedEventArgs> GetEventByIDCompleted;
        
        public event System.EventHandler<GetEventCompletedEventArgs> GetEventCompleted;
        
        public event System.EventHandler<RemoveEventCompletedEventArgs> RemoveEventCompleted;
        
        public event System.EventHandler<GetEventsCompletedEventArgs> GetEventsCompleted;
        
        public event System.EventHandler<GetEventsByEventNameCompletedEventArgs> GetEventsByEventNameCompleted;
        
        public event System.EventHandler<GetEventsByEventDateCompletedEventArgs> GetEventsByEventDateCompleted;
        
        public event System.EventHandler<CreateEventCompletedEventArgs> CreateEventCompleted;
        
        public event System.EventHandler<AddGuestCompletedEventArgs> AddGuestCompleted;
        
        public event System.EventHandler<RemoveGuestCompletedEventArgs> RemoveGuestCompleted;
        
        public event System.EventHandler<GetUsersCompletedEventArgs> GetUsersCompleted;
        
        public event System.EventHandler<GetUserByIdCompletedEventArgs> GetUserByIdCompleted;
        
        public event System.EventHandler<AddUserCompletedEventArgs> AddUserCompleted;
        
        public event System.EventHandler<RemoveUserByUserNameCompletedEventArgs> RemoveUserByUserNameCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.BeginGetGuestsByEventIdAndGuestName(int eventId, string guestFullName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGuestsByEventIdAndGuestName(eventId, guestFullName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Guest> PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.EndGetGuestsByEventIdAndGuestName(System.IAsyncResult result) {
            return base.Channel.EndGetGuestsByEventIdAndGuestName(result);
        }
        
        private System.IAsyncResult OnBeginGetGuestsByEventIdAndGuestName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int eventId = ((int)(inValues[0]));
            string guestFullName = ((string)(inValues[1]));
            return ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).BeginGetGuestsByEventIdAndGuestName(eventId, guestFullName, callback, asyncState);
        }
        
        private object[] OnEndGetGuestsByEventIdAndGuestName(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Guest> retVal = ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).EndGetGuestsByEventIdAndGuestName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGuestsByEventIdAndGuestNameCompleted(object state) {
            if ((this.GetGuestsByEventIdAndGuestNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGuestsByEventIdAndGuestNameCompleted(this, new GetGuestsByEventIdAndGuestNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGuestsByEventIdAndGuestNameAsync(int eventId, string guestFullName) {
            this.GetGuestsByEventIdAndGuestNameAsync(eventId, guestFullName, null);
        }
        
        public void GetGuestsByEventIdAndGuestNameAsync(int eventId, string guestFullName, object userState) {
            if ((this.onBeginGetGuestsByEventIdAndGuestNameDelegate == null)) {
                this.onBeginGetGuestsByEventIdAndGuestNameDelegate = new BeginOperationDelegate(this.OnBeginGetGuestsByEventIdAndGuestName);
            }
            if ((this.onEndGetGuestsByEventIdAndGuestNameDelegate == null)) {
                this.onEndGetGuestsByEventIdAndGuestNameDelegate = new EndOperationDelegate(this.OnEndGetGuestsByEventIdAndGuestName);
            }
            if ((this.onGetGuestsByEventIdAndGuestNameCompletedDelegate == null)) {
                this.onGetGuestsByEventIdAndGuestNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGuestsByEventIdAndGuestNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetGuestsByEventIdAndGuestNameDelegate, new object[] {
                        eventId,
                        guestFullName}, this.onEndGetGuestsByEventIdAndGuestNameDelegate, this.onGetGuestsByEventIdAndGuestNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.BeginEncryptPass(string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEncryptPass(password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.EndEncryptPass(System.IAsyncResult result) {
            return base.Channel.EndEncryptPass(result);
        }
        
        private System.IAsyncResult OnBeginEncryptPass(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string password = ((string)(inValues[0]));
            return ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).BeginEncryptPass(password, callback, asyncState);
        }
        
        private object[] OnEndEncryptPass(System.IAsyncResult result) {
            string retVal = ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).EndEncryptPass(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEncryptPassCompleted(object state) {
            if ((this.EncryptPassCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EncryptPassCompleted(this, new EncryptPassCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EncryptPassAsync(string password) {
            this.EncryptPassAsync(password, null);
        }
        
        public void EncryptPassAsync(string password, object userState) {
            if ((this.onBeginEncryptPassDelegate == null)) {
                this.onBeginEncryptPassDelegate = new BeginOperationDelegate(this.OnBeginEncryptPass);
            }
            if ((this.onEndEncryptPassDelegate == null)) {
                this.onEndEncryptPassDelegate = new EndOperationDelegate(this.OnEndEncryptPass);
            }
            if ((this.onEncryptPassCompletedDelegate == null)) {
                this.onEncryptPassCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEncryptPassCompleted);
            }
            base.InvokeAsync(this.onBeginEncryptPassDelegate, new object[] {
                        password}, this.onEndEncryptPassDelegate, this.onEncryptPassCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.BeginGetSpecificGuest(int eventId, int guestId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSpecificGuest(eventId, guestId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PrApplication.Clients.Windows8.Core.PrServiceReference.Guest PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.EndGetSpecificGuest(System.IAsyncResult result) {
            return base.Channel.EndGetSpecificGuest(result);
        }
        
        private System.IAsyncResult OnBeginGetSpecificGuest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int eventId = ((int)(inValues[0]));
            int guestId = ((int)(inValues[1]));
            return ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).BeginGetSpecificGuest(eventId, guestId, callback, asyncState);
        }
        
        private object[] OnEndGetSpecificGuest(System.IAsyncResult result) {
            PrApplication.Clients.Windows8.Core.PrServiceReference.Guest retVal = ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).EndGetSpecificGuest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSpecificGuestCompleted(object state) {
            if ((this.GetSpecificGuestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSpecificGuestCompleted(this, new GetSpecificGuestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSpecificGuestAsync(int eventId, int guestId) {
            this.GetSpecificGuestAsync(eventId, guestId, null);
        }
        
        public void GetSpecificGuestAsync(int eventId, int guestId, object userState) {
            if ((this.onBeginGetSpecificGuestDelegate == null)) {
                this.onBeginGetSpecificGuestDelegate = new BeginOperationDelegate(this.OnBeginGetSpecificGuest);
            }
            if ((this.onEndGetSpecificGuestDelegate == null)) {
                this.onEndGetSpecificGuestDelegate = new EndOperationDelegate(this.OnEndGetSpecificGuest);
            }
            if ((this.onGetSpecificGuestCompletedDelegate == null)) {
                this.onGetSpecificGuestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSpecificGuestCompleted);
            }
            base.InvokeAsync(this.onBeginGetSpecificGuestDelegate, new object[] {
                        eventId,
                        guestId}, this.onEndGetSpecificGuestDelegate, this.onGetSpecificGuestCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.BeginChangeGuestStatus(int eventId, int guestId, bool attended, bool allCompanionsArrived, int companionsThatArrived, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangeGuestStatus(eventId, guestId, attended, allCompanionsArrived, companionsThatArrived, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.EndChangeGuestStatus(System.IAsyncResult result) {
            return base.Channel.EndChangeGuestStatus(result);
        }
        
        private System.IAsyncResult OnBeginChangeGuestStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int eventId = ((int)(inValues[0]));
            int guestId = ((int)(inValues[1]));
            bool attended = ((bool)(inValues[2]));
            bool allCompanionsArrived = ((bool)(inValues[3]));
            int companionsThatArrived = ((int)(inValues[4]));
            return ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).BeginChangeGuestStatus(eventId, guestId, attended, allCompanionsArrived, companionsThatArrived, callback, asyncState);
        }
        
        private object[] OnEndChangeGuestStatus(System.IAsyncResult result) {
            bool retVal = ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).EndChangeGuestStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnChangeGuestStatusCompleted(object state) {
            if ((this.ChangeGuestStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangeGuestStatusCompleted(this, new ChangeGuestStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangeGuestStatusAsync(int eventId, int guestId, bool attended, bool allCompanionsArrived, int companionsThatArrived) {
            this.ChangeGuestStatusAsync(eventId, guestId, attended, allCompanionsArrived, companionsThatArrived, null);
        }
        
        public void ChangeGuestStatusAsync(int eventId, int guestId, bool attended, bool allCompanionsArrived, int companionsThatArrived, object userState) {
            if ((this.onBeginChangeGuestStatusDelegate == null)) {
                this.onBeginChangeGuestStatusDelegate = new BeginOperationDelegate(this.OnBeginChangeGuestStatus);
            }
            if ((this.onEndChangeGuestStatusDelegate == null)) {
                this.onEndChangeGuestStatusDelegate = new EndOperationDelegate(this.OnEndChangeGuestStatus);
            }
            if ((this.onChangeGuestStatusCompletedDelegate == null)) {
                this.onChangeGuestStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangeGuestStatusCompleted);
            }
            base.InvokeAsync(this.onBeginChangeGuestStatusDelegate, new object[] {
                        eventId,
                        guestId,
                        attended,
                        allCompanionsArrived,
                        companionsThatArrived}, this.onEndChangeGuestStatusDelegate, this.onChangeGuestStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.BeginGetEventByID(int eventId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEventByID(eventId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PrApplication.Clients.Windows8.Core.PrServiceReference.Event PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.EndGetEventByID(System.IAsyncResult result) {
            return base.Channel.EndGetEventByID(result);
        }
        
        private System.IAsyncResult OnBeginGetEventByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int eventId = ((int)(inValues[0]));
            return ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).BeginGetEventByID(eventId, callback, asyncState);
        }
        
        private object[] OnEndGetEventByID(System.IAsyncResult result) {
            PrApplication.Clients.Windows8.Core.PrServiceReference.Event retVal = ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).EndGetEventByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEventByIDCompleted(object state) {
            if ((this.GetEventByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEventByIDCompleted(this, new GetEventByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEventByIDAsync(int eventId) {
            this.GetEventByIDAsync(eventId, null);
        }
        
        public void GetEventByIDAsync(int eventId, object userState) {
            if ((this.onBeginGetEventByIDDelegate == null)) {
                this.onBeginGetEventByIDDelegate = new BeginOperationDelegate(this.OnBeginGetEventByID);
            }
            if ((this.onEndGetEventByIDDelegate == null)) {
                this.onEndGetEventByIDDelegate = new EndOperationDelegate(this.OnEndGetEventByID);
            }
            if ((this.onGetEventByIDCompletedDelegate == null)) {
                this.onGetEventByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEventByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetEventByIDDelegate, new object[] {
                        eventId}, this.onEndGetEventByIDDelegate, this.onGetEventByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.BeginGetEvent(string eventName, System.DateTime eventDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEvent(eventName, eventDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PrApplication.Clients.Windows8.Core.PrServiceReference.Event PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.EndGetEvent(System.IAsyncResult result) {
            return base.Channel.EndGetEvent(result);
        }
        
        private System.IAsyncResult OnBeginGetEvent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string eventName = ((string)(inValues[0]));
            System.DateTime eventDate = ((System.DateTime)(inValues[1]));
            return ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).BeginGetEvent(eventName, eventDate, callback, asyncState);
        }
        
        private object[] OnEndGetEvent(System.IAsyncResult result) {
            PrApplication.Clients.Windows8.Core.PrServiceReference.Event retVal = ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).EndGetEvent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEventCompleted(object state) {
            if ((this.GetEventCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEventCompleted(this, new GetEventCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEventAsync(string eventName, System.DateTime eventDate) {
            this.GetEventAsync(eventName, eventDate, null);
        }
        
        public void GetEventAsync(string eventName, System.DateTime eventDate, object userState) {
            if ((this.onBeginGetEventDelegate == null)) {
                this.onBeginGetEventDelegate = new BeginOperationDelegate(this.OnBeginGetEvent);
            }
            if ((this.onEndGetEventDelegate == null)) {
                this.onEndGetEventDelegate = new EndOperationDelegate(this.OnEndGetEvent);
            }
            if ((this.onGetEventCompletedDelegate == null)) {
                this.onGetEventCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEventCompleted);
            }
            base.InvokeAsync(this.onBeginGetEventDelegate, new object[] {
                        eventName,
                        eventDate}, this.onEndGetEventDelegate, this.onGetEventCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.BeginRemoveEvent(int eventId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveEvent(eventId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.EndRemoveEvent(System.IAsyncResult result) {
            return base.Channel.EndRemoveEvent(result);
        }
        
        private System.IAsyncResult OnBeginRemoveEvent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int eventId = ((int)(inValues[0]));
            return ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).BeginRemoveEvent(eventId, callback, asyncState);
        }
        
        private object[] OnEndRemoveEvent(System.IAsyncResult result) {
            bool retVal = ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).EndRemoveEvent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveEventCompleted(object state) {
            if ((this.RemoveEventCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveEventCompleted(this, new RemoveEventCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveEventAsync(int eventId) {
            this.RemoveEventAsync(eventId, null);
        }
        
        public void RemoveEventAsync(int eventId, object userState) {
            if ((this.onBeginRemoveEventDelegate == null)) {
                this.onBeginRemoveEventDelegate = new BeginOperationDelegate(this.OnBeginRemoveEvent);
            }
            if ((this.onEndRemoveEventDelegate == null)) {
                this.onEndRemoveEventDelegate = new EndOperationDelegate(this.OnEndRemoveEvent);
            }
            if ((this.onRemoveEventCompletedDelegate == null)) {
                this.onRemoveEventCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveEventCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveEventDelegate, new object[] {
                        eventId}, this.onEndRemoveEventDelegate, this.onRemoveEventCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.BeginGetEvents(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEvents(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Event> PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.EndGetEvents(System.IAsyncResult result) {
            return base.Channel.EndGetEvents(result);
        }
        
        private System.IAsyncResult OnBeginGetEvents(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).BeginGetEvents(callback, asyncState);
        }
        
        private object[] OnEndGetEvents(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Event> retVal = ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).EndGetEvents(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEventsCompleted(object state) {
            if ((this.GetEventsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEventsCompleted(this, new GetEventsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEventsAsync() {
            this.GetEventsAsync(null);
        }
        
        public void GetEventsAsync(object userState) {
            if ((this.onBeginGetEventsDelegate == null)) {
                this.onBeginGetEventsDelegate = new BeginOperationDelegate(this.OnBeginGetEvents);
            }
            if ((this.onEndGetEventsDelegate == null)) {
                this.onEndGetEventsDelegate = new EndOperationDelegate(this.OnEndGetEvents);
            }
            if ((this.onGetEventsCompletedDelegate == null)) {
                this.onGetEventsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEventsCompleted);
            }
            base.InvokeAsync(this.onBeginGetEventsDelegate, null, this.onEndGetEventsDelegate, this.onGetEventsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.BeginGetEventsByEventName(string eventName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEventsByEventName(eventName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Event> PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.EndGetEventsByEventName(System.IAsyncResult result) {
            return base.Channel.EndGetEventsByEventName(result);
        }
        
        private System.IAsyncResult OnBeginGetEventsByEventName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string eventName = ((string)(inValues[0]));
            return ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).BeginGetEventsByEventName(eventName, callback, asyncState);
        }
        
        private object[] OnEndGetEventsByEventName(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Event> retVal = ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).EndGetEventsByEventName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEventsByEventNameCompleted(object state) {
            if ((this.GetEventsByEventNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEventsByEventNameCompleted(this, new GetEventsByEventNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEventsByEventNameAsync(string eventName) {
            this.GetEventsByEventNameAsync(eventName, null);
        }
        
        public void GetEventsByEventNameAsync(string eventName, object userState) {
            if ((this.onBeginGetEventsByEventNameDelegate == null)) {
                this.onBeginGetEventsByEventNameDelegate = new BeginOperationDelegate(this.OnBeginGetEventsByEventName);
            }
            if ((this.onEndGetEventsByEventNameDelegate == null)) {
                this.onEndGetEventsByEventNameDelegate = new EndOperationDelegate(this.OnEndGetEventsByEventName);
            }
            if ((this.onGetEventsByEventNameCompletedDelegate == null)) {
                this.onGetEventsByEventNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEventsByEventNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetEventsByEventNameDelegate, new object[] {
                        eventName}, this.onEndGetEventsByEventNameDelegate, this.onGetEventsByEventNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.BeginGetEventsByEventDate(System.DateTime eventDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEventsByEventDate(eventDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Event> PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.EndGetEventsByEventDate(System.IAsyncResult result) {
            return base.Channel.EndGetEventsByEventDate(result);
        }
        
        private System.IAsyncResult OnBeginGetEventsByEventDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime eventDate = ((System.DateTime)(inValues[0]));
            return ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).BeginGetEventsByEventDate(eventDate, callback, asyncState);
        }
        
        private object[] OnEndGetEventsByEventDate(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Event> retVal = ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).EndGetEventsByEventDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEventsByEventDateCompleted(object state) {
            if ((this.GetEventsByEventDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEventsByEventDateCompleted(this, new GetEventsByEventDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEventsByEventDateAsync(System.DateTime eventDate) {
            this.GetEventsByEventDateAsync(eventDate, null);
        }
        
        public void GetEventsByEventDateAsync(System.DateTime eventDate, object userState) {
            if ((this.onBeginGetEventsByEventDateDelegate == null)) {
                this.onBeginGetEventsByEventDateDelegate = new BeginOperationDelegate(this.OnBeginGetEventsByEventDate);
            }
            if ((this.onEndGetEventsByEventDateDelegate == null)) {
                this.onEndGetEventsByEventDateDelegate = new EndOperationDelegate(this.OnEndGetEventsByEventDate);
            }
            if ((this.onGetEventsByEventDateCompletedDelegate == null)) {
                this.onGetEventsByEventDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEventsByEventDateCompleted);
            }
            base.InvokeAsync(this.onBeginGetEventsByEventDateDelegate, new object[] {
                        eventDate}, this.onEndGetEventsByEventDateDelegate, this.onGetEventsByEventDateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.BeginCreateEvent(string eventName, System.DateTime eventDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateEvent(eventName, eventDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.EndCreateEvent(System.IAsyncResult result) {
            return base.Channel.EndCreateEvent(result);
        }
        
        private System.IAsyncResult OnBeginCreateEvent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string eventName = ((string)(inValues[0]));
            System.DateTime eventDate = ((System.DateTime)(inValues[1]));
            return ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).BeginCreateEvent(eventName, eventDate, callback, asyncState);
        }
        
        private object[] OnEndCreateEvent(System.IAsyncResult result) {
            bool retVal = ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).EndCreateEvent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateEventCompleted(object state) {
            if ((this.CreateEventCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateEventCompleted(this, new CreateEventCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateEventAsync(string eventName, System.DateTime eventDate) {
            this.CreateEventAsync(eventName, eventDate, null);
        }
        
        public void CreateEventAsync(string eventName, System.DateTime eventDate, object userState) {
            if ((this.onBeginCreateEventDelegate == null)) {
                this.onBeginCreateEventDelegate = new BeginOperationDelegate(this.OnBeginCreateEvent);
            }
            if ((this.onEndCreateEventDelegate == null)) {
                this.onEndCreateEventDelegate = new EndOperationDelegate(this.OnEndCreateEvent);
            }
            if ((this.onCreateEventCompletedDelegate == null)) {
                this.onCreateEventCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateEventCompleted);
            }
            base.InvokeAsync(this.onBeginCreateEventDelegate, new object[] {
                        eventName,
                        eventDate}, this.onEndCreateEventDelegate, this.onCreateEventCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.BeginAddGuest(int eventId, PrApplication.Clients.Windows8.Core.PrServiceReference.Guest guest, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddGuest(eventId, guest, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.EndAddGuest(System.IAsyncResult result) {
            return base.Channel.EndAddGuest(result);
        }
        
        private System.IAsyncResult OnBeginAddGuest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int eventId = ((int)(inValues[0]));
            PrApplication.Clients.Windows8.Core.PrServiceReference.Guest guest = ((PrApplication.Clients.Windows8.Core.PrServiceReference.Guest)(inValues[1]));
            return ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).BeginAddGuest(eventId, guest, callback, asyncState);
        }
        
        private object[] OnEndAddGuest(System.IAsyncResult result) {
            bool retVal = ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).EndAddGuest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddGuestCompleted(object state) {
            if ((this.AddGuestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddGuestCompleted(this, new AddGuestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddGuestAsync(int eventId, PrApplication.Clients.Windows8.Core.PrServiceReference.Guest guest) {
            this.AddGuestAsync(eventId, guest, null);
        }
        
        public void AddGuestAsync(int eventId, PrApplication.Clients.Windows8.Core.PrServiceReference.Guest guest, object userState) {
            if ((this.onBeginAddGuestDelegate == null)) {
                this.onBeginAddGuestDelegate = new BeginOperationDelegate(this.OnBeginAddGuest);
            }
            if ((this.onEndAddGuestDelegate == null)) {
                this.onEndAddGuestDelegate = new EndOperationDelegate(this.OnEndAddGuest);
            }
            if ((this.onAddGuestCompletedDelegate == null)) {
                this.onAddGuestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddGuestCompleted);
            }
            base.InvokeAsync(this.onBeginAddGuestDelegate, new object[] {
                        eventId,
                        guest}, this.onEndAddGuestDelegate, this.onAddGuestCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.BeginRemoveGuest(int eventId, int guestId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveGuest(eventId, guestId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.EndRemoveGuest(System.IAsyncResult result) {
            return base.Channel.EndRemoveGuest(result);
        }
        
        private System.IAsyncResult OnBeginRemoveGuest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int eventId = ((int)(inValues[0]));
            int guestId = ((int)(inValues[1]));
            return ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).BeginRemoveGuest(eventId, guestId, callback, asyncState);
        }
        
        private object[] OnEndRemoveGuest(System.IAsyncResult result) {
            bool retVal = ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).EndRemoveGuest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveGuestCompleted(object state) {
            if ((this.RemoveGuestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveGuestCompleted(this, new RemoveGuestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveGuestAsync(int eventId, int guestId) {
            this.RemoveGuestAsync(eventId, guestId, null);
        }
        
        public void RemoveGuestAsync(int eventId, int guestId, object userState) {
            if ((this.onBeginRemoveGuestDelegate == null)) {
                this.onBeginRemoveGuestDelegate = new BeginOperationDelegate(this.OnBeginRemoveGuest);
            }
            if ((this.onEndRemoveGuestDelegate == null)) {
                this.onEndRemoveGuestDelegate = new EndOperationDelegate(this.OnEndRemoveGuest);
            }
            if ((this.onRemoveGuestCompletedDelegate == null)) {
                this.onRemoveGuestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveGuestCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveGuestDelegate, new object[] {
                        eventId,
                        guestId}, this.onEndRemoveGuestDelegate, this.onRemoveGuestCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.BeginGetUsers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUsers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.User> PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.EndGetUsers(System.IAsyncResult result) {
            return base.Channel.EndGetUsers(result);
        }
        
        private System.IAsyncResult OnBeginGetUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).BeginGetUsers(callback, asyncState);
        }
        
        private object[] OnEndGetUsers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.User> retVal = ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).EndGetUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUsersCompleted(object state) {
            if ((this.GetUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUsersCompleted(this, new GetUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUsersAsync() {
            this.GetUsersAsync(null);
        }
        
        public void GetUsersAsync(object userState) {
            if ((this.onBeginGetUsersDelegate == null)) {
                this.onBeginGetUsersDelegate = new BeginOperationDelegate(this.OnBeginGetUsers);
            }
            if ((this.onEndGetUsersDelegate == null)) {
                this.onEndGetUsersDelegate = new EndOperationDelegate(this.OnEndGetUsers);
            }
            if ((this.onGetUsersCompletedDelegate == null)) {
                this.onGetUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUsersCompleted);
            }
            base.InvokeAsync(this.onBeginGetUsersDelegate, null, this.onEndGetUsersDelegate, this.onGetUsersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.BeginGetUserById(int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserById(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PrApplication.Clients.Windows8.Core.PrServiceReference.User PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.EndGetUserById(System.IAsyncResult result) {
            return base.Channel.EndGetUserById(result);
        }
        
        private System.IAsyncResult OnBeginGetUserById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            return ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).BeginGetUserById(userId, callback, asyncState);
        }
        
        private object[] OnEndGetUserById(System.IAsyncResult result) {
            PrApplication.Clients.Windows8.Core.PrServiceReference.User retVal = ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).EndGetUserById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserByIdCompleted(object state) {
            if ((this.GetUserByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserByIdCompleted(this, new GetUserByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserByIdAsync(int userId) {
            this.GetUserByIdAsync(userId, null);
        }
        
        public void GetUserByIdAsync(int userId, object userState) {
            if ((this.onBeginGetUserByIdDelegate == null)) {
                this.onBeginGetUserByIdDelegate = new BeginOperationDelegate(this.OnBeginGetUserById);
            }
            if ((this.onEndGetUserByIdDelegate == null)) {
                this.onEndGetUserByIdDelegate = new EndOperationDelegate(this.OnEndGetUserById);
            }
            if ((this.onGetUserByIdCompletedDelegate == null)) {
                this.onGetUserByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserByIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserByIdDelegate, new object[] {
                        userId}, this.onEndGetUserByIdDelegate, this.onGetUserByIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.BeginAddUser(string userName, string password, bool isAdmin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUser(userName, password, isAdmin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.EndAddUser(System.IAsyncResult result) {
            return base.Channel.EndAddUser(result);
        }
        
        private System.IAsyncResult OnBeginAddUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            bool isAdmin = ((bool)(inValues[2]));
            return ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).BeginAddUser(userName, password, isAdmin, callback, asyncState);
        }
        
        private object[] OnEndAddUser(System.IAsyncResult result) {
            bool retVal = ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).EndAddUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddUserCompleted(object state) {
            if ((this.AddUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUserCompleted(this, new AddUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUserAsync(string userName, string password, bool isAdmin) {
            this.AddUserAsync(userName, password, isAdmin, null);
        }
        
        public void AddUserAsync(string userName, string password, bool isAdmin, object userState) {
            if ((this.onBeginAddUserDelegate == null)) {
                this.onBeginAddUserDelegate = new BeginOperationDelegate(this.OnBeginAddUser);
            }
            if ((this.onEndAddUserDelegate == null)) {
                this.onEndAddUserDelegate = new EndOperationDelegate(this.OnEndAddUser);
            }
            if ((this.onAddUserCompletedDelegate == null)) {
                this.onAddUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUserCompleted);
            }
            base.InvokeAsync(this.onBeginAddUserDelegate, new object[] {
                        userName,
                        password,
                        isAdmin}, this.onEndAddUserDelegate, this.onAddUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.BeginRemoveUserByUserName(string userName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveUserByUserName(userName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService.EndRemoveUserByUserName(System.IAsyncResult result) {
            return base.Channel.EndRemoveUserByUserName(result);
        }
        
        private System.IAsyncResult OnBeginRemoveUserByUserName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            return ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).BeginRemoveUserByUserName(userName, callback, asyncState);
        }
        
        private object[] OnEndRemoveUserByUserName(System.IAsyncResult result) {
            bool retVal = ((PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService)(this)).EndRemoveUserByUserName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveUserByUserNameCompleted(object state) {
            if ((this.RemoveUserByUserNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveUserByUserNameCompleted(this, new RemoveUserByUserNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveUserByUserNameAsync(string userName) {
            this.RemoveUserByUserNameAsync(userName, null);
        }
        
        public void RemoveUserByUserNameAsync(string userName, object userState) {
            if ((this.onBeginRemoveUserByUserNameDelegate == null)) {
                this.onBeginRemoveUserByUserNameDelegate = new BeginOperationDelegate(this.OnBeginRemoveUserByUserName);
            }
            if ((this.onEndRemoveUserByUserNameDelegate == null)) {
                this.onEndRemoveUserByUserNameDelegate = new EndOperationDelegate(this.OnEndRemoveUserByUserName);
            }
            if ((this.onRemoveUserByUserNameCompletedDelegate == null)) {
                this.onRemoveUserByUserNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveUserByUserNameCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveUserByUserNameDelegate, new object[] {
                        userName}, this.onEndRemoveUserByUserNameDelegate, this.onRemoveUserByUserNameCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService CreateChannel() {
            return new PrServiceClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IPrService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IPrService)) {
                return new System.ServiceModel.EndpointAddress("http://prservice.cloudapp.net/PrService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return PrServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IPrService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return PrServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IPrService);
        }
        
        private class PrServiceClientChannel : ChannelBase<PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService>, PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService {
            
            public PrServiceClientChannel(System.ServiceModel.ClientBase<PrApplication.Clients.Windows8.Core.PrServiceReference.IPrService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetGuestsByEventIdAndGuestName(int eventId, string guestFullName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = eventId;
                _args[1] = guestFullName;
                System.IAsyncResult _result = base.BeginInvoke("GetGuestsByEventIdAndGuestName", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Guest> EndGetGuestsByEventIdAndGuestName(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Guest> _result = ((System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Guest>)(base.EndInvoke("GetGuestsByEventIdAndGuestName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEncryptPass(string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = password;
                System.IAsyncResult _result = base.BeginInvoke("EncryptPass", _args, callback, asyncState);
                return _result;
            }
            
            public string EndEncryptPass(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("EncryptPass", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSpecificGuest(int eventId, int guestId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = eventId;
                _args[1] = guestId;
                System.IAsyncResult _result = base.BeginInvoke("GetSpecificGuest", _args, callback, asyncState);
                return _result;
            }
            
            public PrApplication.Clients.Windows8.Core.PrServiceReference.Guest EndGetSpecificGuest(System.IAsyncResult result) {
                object[] _args = new object[0];
                PrApplication.Clients.Windows8.Core.PrServiceReference.Guest _result = ((PrApplication.Clients.Windows8.Core.PrServiceReference.Guest)(base.EndInvoke("GetSpecificGuest", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginChangeGuestStatus(int eventId, int guestId, bool attended, bool allCompanionsArrived, int companionsThatArrived, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = eventId;
                _args[1] = guestId;
                _args[2] = attended;
                _args[3] = allCompanionsArrived;
                _args[4] = companionsThatArrived;
                System.IAsyncResult _result = base.BeginInvoke("ChangeGuestStatus", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndChangeGuestStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ChangeGuestStatus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetEventByID(int eventId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = eventId;
                System.IAsyncResult _result = base.BeginInvoke("GetEventByID", _args, callback, asyncState);
                return _result;
            }
            
            public PrApplication.Clients.Windows8.Core.PrServiceReference.Event EndGetEventByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                PrApplication.Clients.Windows8.Core.PrServiceReference.Event _result = ((PrApplication.Clients.Windows8.Core.PrServiceReference.Event)(base.EndInvoke("GetEventByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetEvent(string eventName, System.DateTime eventDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = eventName;
                _args[1] = eventDate;
                System.IAsyncResult _result = base.BeginInvoke("GetEvent", _args, callback, asyncState);
                return _result;
            }
            
            public PrApplication.Clients.Windows8.Core.PrServiceReference.Event EndGetEvent(System.IAsyncResult result) {
                object[] _args = new object[0];
                PrApplication.Clients.Windows8.Core.PrServiceReference.Event _result = ((PrApplication.Clients.Windows8.Core.PrServiceReference.Event)(base.EndInvoke("GetEvent", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveEvent(int eventId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = eventId;
                System.IAsyncResult _result = base.BeginInvoke("RemoveEvent", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRemoveEvent(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RemoveEvent", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetEvents(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetEvents", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Event> EndGetEvents(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Event> _result = ((System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Event>)(base.EndInvoke("GetEvents", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetEventsByEventName(string eventName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = eventName;
                System.IAsyncResult _result = base.BeginInvoke("GetEventsByEventName", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Event> EndGetEventsByEventName(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Event> _result = ((System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Event>)(base.EndInvoke("GetEventsByEventName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetEventsByEventDate(System.DateTime eventDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = eventDate;
                System.IAsyncResult _result = base.BeginInvoke("GetEventsByEventDate", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Event> EndGetEventsByEventDate(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Event> _result = ((System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.Event>)(base.EndInvoke("GetEventsByEventDate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateEvent(string eventName, System.DateTime eventDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = eventName;
                _args[1] = eventDate;
                System.IAsyncResult _result = base.BeginInvoke("CreateEvent", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndCreateEvent(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("CreateEvent", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddGuest(int eventId, PrApplication.Clients.Windows8.Core.PrServiceReference.Guest guest, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = eventId;
                _args[1] = guest;
                System.IAsyncResult _result = base.BeginInvoke("AddGuest", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddGuest(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddGuest", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveGuest(int eventId, int guestId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = eventId;
                _args[1] = guestId;
                System.IAsyncResult _result = base.BeginInvoke("RemoveGuest", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRemoveGuest(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RemoveGuest", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUsers(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetUsers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.User> EndGetUsers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.User> _result = ((System.Collections.ObjectModel.ObservableCollection<PrApplication.Clients.Windows8.Core.PrServiceReference.User>)(base.EndInvoke("GetUsers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUserById(int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userId;
                System.IAsyncResult _result = base.BeginInvoke("GetUserById", _args, callback, asyncState);
                return _result;
            }
            
            public PrApplication.Clients.Windows8.Core.PrServiceReference.User EndGetUserById(System.IAsyncResult result) {
                object[] _args = new object[0];
                PrApplication.Clients.Windows8.Core.PrServiceReference.User _result = ((PrApplication.Clients.Windows8.Core.PrServiceReference.User)(base.EndInvoke("GetUserById", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddUser(string userName, string password, bool isAdmin, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userName;
                _args[1] = password;
                _args[2] = isAdmin;
                System.IAsyncResult _result = base.BeginInvoke("AddUser", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveUserByUserName(string userName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userName;
                System.IAsyncResult _result = base.BeginInvoke("RemoveUserByUserName", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRemoveUserByUserName(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RemoveUserByUserName", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IPrService,
        }
    }
}
